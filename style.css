html, body {
    width: 100%;
    margin: 0;
    padding: 0;

    --header-font: "Quicksand", serif;
    --general-font: system-ui, serif;
    --general-font-size: 1rem;

    font-family: var(--general-font);
    font-size: var(--general-font-size);
}

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background-color: #f2f2f2;
    background-image: url("assets/background.svg");
    background-size: 40%;
}

h1, h2, h3,
h4, h5, h6 {
    font-family: var(--header-font);
}

#interactive-background,
.background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background-color: rgba(0, 0, 0, 0.8);
}

* {
    box-sizing: border-box;
}

header {
    padding: 1rem;
    background-color: rgba(255, 255, 255, 1);
    display: flex;
    position: relative;
    border-bottom: 1px solid #ccc;
    z-index: 40;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
}

header > .logo {
    width: 2.5em;
    height: 2.5em;
    margin-right: .7em;
}

header > a {
    margin: 0;
    font-size: 1.8em;
    text-decoration: none;
    color: black;
    font-weight: normal;
    display: block;
    text-align: center;
    font-family: var(--header-font);
    display: flex;
    align-self: center;
}

header .link-island {
    margin-left: auto;
    display: flex;
    gap: .5em;
}

header .link-island a {
    display: block;
    padding: .3em;
    padding-left: .6em;
    padding-right: .6em;
    text-decoration: none;
    color: black;
    font-family: var(--header-font);
    font-size: 1.3em;
}

header .link-island a:hover {
    text-decoration: underline;
}

.header-drop-menu {
    transition: 300ms;
    max-height: 0;
    z-index: 30;
    display: none;
    width: 100%;
    background-color: white;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
    grid-template-columns: repeat(auto-fit, minmax(10em, 1fr));
    gap: .5em;
    transform: translateY(-100%) scaleY(0);
    padding: 0;
}

.header-drop-menu.visible {
    max-height: 20em;
    padding: 1rem;
    transform: translateY(0) scaleY(1);
}

.header-drop-menu a {
    display: block;
    padding: .5em;
    border: 1px solid #ccc;
    text-decoration: none;
    color: black;
    border-radius: 5px;
}

.header-drop-menu a:hover {
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
}

header .hamburger-icon {
    display: none;
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    width: 2em;
    grid-template-columns: 1fr;
    grid-template-rows: 5px 5px 5px;
    gap: 5px;
    cursor: pointer;
}

header .hamburger-icon .bar {
    width: 100%;
    background-color: #20b966;
    transition: 300ms;
}

header .hamburger-icon:not(.x) .bar:nth-child(2) {
    width: 75%;
    margin-left: 25%;
}

header .hamburger-icon:not(.x) .bar:nth-child(3) {
    width: 50%;
    margin-left: 50%;
}

header .hamburger-icon.x .bar:nth-child(1) {
    transform: rotate(45deg) translate(.3em, .6em);
}

header .hamburger-icon.x .bar:nth-child(2) {
    width: 0;
    margin-left: 50%;
}

header .hamburger-icon.x .bar:nth-child(3) {
    transform: rotate(-45deg) translate(.3em, -.6em);
}

@media only screen and (max-width: 800px) {

    header .hamburger-icon {
        display: grid;
    }

    header .link-island {
        display: none;
    }

    .header-drop-menu {
        display: grid;
    }

    header.expanded {
        box-shadow: none;
    }
    
}

.in-between-img {
    position: relative;
    z-index: -2;
    max-height: 10em;
}

.in-between-img img {
    width: 100%;
}

main {
    background-color: white;
    padding: 2rem;
    width: min(100%, 600px);
    margin: 0 auto;
    margin-bottom: 2rem;
    display: grid;
    gap: 1em;
    border-radius: 1em;
    margin-top: 2rem;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
    position: relative;
    z-index: 100;
    transition: 300ms;
}

main.largebottomgap {
    margin-bottom: 20rem;
}

main p {
    text-align: justify;
    margin: 0;
}

main p.error {
    text-align: center;
    color: red;
}

main p.error::before {
    content: "Error: ";
    font-weight: bold;
}

main .checkbox-container {
    display: grid;
    grid-template-columns: 2em 1fr;
    gap: 1em;
}

main h1, main h2, main h3,
main h4, main h5, main h6 {
    margin: 0;
}

main h1 {
    text-align: center;
}

main ol,
main ul {
    margin: 0;
}

main fieldset {
    padding: 1rem;
    display: grid;
    gap: 1em;
    border-radius: .8em;
    border: 1px solid #ccc;
}

main .enable-gap {
    display: grid;
    gap: 1em;
}

main fieldset.many-inputs {
    gap: 0em;
}

main fieldset.many-inputs input:not(:last-of-type) {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    border-bottom: none;
}

main fieldset.many-inputs input:not(:first-of-type) {
    border-top-right-radius: 0;
    border-top-left-radius: 0;
}

main a.linkbutton,
main input,
main button {
    text-decoration: none;
    color: black;
    text-align: center;
    display: block;
    width: 100%;
    font-family: var(--header-font);
    font-weight: bold;
    font-size: 1.2em;
    padding: .8em;
    border-radius: .5em;
    background-color: rgb(244, 244, 244);
    border: 1px solid #a1a1a1;
    cursor: pointer;
    transition: 100ms;
}

main input {
    background-color: white;
    font-family: var(--general-font);
    font-weight: normal;
    cursor: initial;
    font-size: 1em;
    background-color: rgb(251, 251, 251);
}

main .round-edges {
    border-radius: .8em;
}

main a.linkbutton:hover,
main button:hover:not(:disabled) {
    box-shadow: 0 0 7px rgba(0, 0, 0, 0.3);
}

main button:disabled {
    cursor: not-allowed;
}

main section {
    display: grid;
    gap: 1em;
}

main textarea {
    width: 100%;
    resize: vertical;
    padding: .8em;
    border-radius: .5em;
    background-color: rgb(251, 251, 251);
    border: 1px solid #a1a1a1;
    font-family: var(--general-font);
    font-size: 1em;
}

main .custom-form {
    display: grid;
    gap: 0;
}

main .custom-form *:not(:first-child) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-top: none;
}

main .custom-form *:not(:last-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

main img {
    width: 100%;
    object-fit: cover;
}

main .middle-container {
    width: 100%;
    position: relative;
    display: flex;
}

main img.smaller {
    width: auto;
    max-width: 100%;
    max-height: 20rem;
    margin: 0 auto;
}

footer {
    border-top: 1px solid #ccc;
    background-color: white;
    margin-top: auto;
    padding: 1rem;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
}

/* non general css for multigolf */

main .back-button {
    position: absolute;
    top: -2rem;
    left: 1rem;
    font-size: 1rem;
    font-weight: normal;
    padding: .3rem;
    height: 2rem;
    width: fit-content;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-top:   none;
    border-left:  none;
    border-right: none;
    padding-left: .8rem;
    padding-right: .8rem;
    background-color: white;
}

main:has(section.visible .back-button) {
    margin-top: 4rem;
}

main .faq-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: .7em;
}

main .faq-container .entry {
    background-color: rgb(244, 244, 244);
    border: 1px solid #a1a1a1;
    border-radius: .3em;
    padding: .5rem;
    transition: 300ms;
}

main .faq-container .question {
    position: relative;
    cursor: pointer;
    padding-right: 20px;
}

main .faq-container .entry.unfolded .question {
    font-weight: bold;
    margin-bottom: .5em;
}

main .faq-container .question::after {
    content: ">";
    position: absolute;
    right: 0;
    top: 0;
    color:rgba(0, 0, 0, 0.5);
    transform: rotate(90deg);
    transition: 500ms;
}

main .faq-container .entry.unfolded .question::after {
    transform: rotate(270deg);
}

main .faq-container .entry.unfolded .answer {
    transition: 300ms;
    max-height: 300px;
    opacity: 1;
}

main .faq-container .entry:not(.unfolded) .answer {
    transition: 300ms;
    max-height: 0;
    opacity: 0;
}

.fullwidth-banner {
    background-image: url('assets/gifs/background.gif');
    padding: 10vh;
    position: relative;
}

.fullwidth-banner .darktop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
}

.fullwidth-banner .hugetext {
    position: relative;
    color: white;
    text-align: center;
    font-weight: 900;
    font-family: var(--header-font);
    font-size: 2rem;
}

.player-status-container {
    display: grid;
    grid-template-columns: 1rem 1fr;
    gap: .6rem;
}

.player-status-container .circle-indicator {
    width: .8rem;
    height: .8rem;
    border-radius: 50%;
    background-color: black;
    margin-top: .35rem;
}

.player-status-container .circle-indicator.green {
    background-color: rgb(0, 255, 0);
}

.player-status-container .circle-indicator.blue {
    background-color: rgb(97, 82, 255);
}

.player-status-container .circle-indicator.orange {
    background-color: rgb(255, 204, 0);
}

.player-status-container .circle-indicator.red {
    background-color: rgb(255, 0, 0);
}

.player-status-container .reconnect {
    font-size: .8em;
    padding: .3em;
}

#game-config-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
}

#game-config-container > div {
    background-color: rgb(245, 245, 245);;
    border-radius: .5rem;
    border: 1px solid #ccc;
    padding: 1rem;
    display: grid;
    grid-template-columns: 1fr;
    gap: .5rem;
}

#game-config-container > div > .titlerow {
    display: grid;
    grid-template-columns: 3fr 2fr;
}

#game-config-container > div .name {
    font-family: var(--header-font);
    font-weight: bold;
    font-size: 1.1em;
    display: flex;
    align-items: center;
}

#game-config-container > div .input-container {
    display: flex;
    flex-direction: row;
    justify-content: end;
}

#game-config-container > div .input-container * {
    width: fit-content;
}

#game-config-container > div .input-container input[type=checkbox] {
    transform: scale(1.5);
}

#game-config-container > div .input-container input[type=number] {
    padding: .3rem;
}

#game-config-container > div .warning::before {
    content: "Warning: ";
    color: red;
}

#qr-img {
    padding: 1em;
}

.qr-loading {
    aspect-ratio: 1 / 1;
    width: 100%;
    height: 100%;
    background-image: url("assets/gifs/qr-loading.gif");
    background-size: 100%;
}

#fullscreen-canvas {
    position: fixed;
    z-index: 200;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("assets/compressed/objects/grid.png");
    background-size: 20%;
}

main section[data-phase] {
    display: none;
}

main #board-canvas {
    width: 100%;
    aspect-ratio: 5 / 3;
}

@keyframes loading-text {
    0% {
        transform: rotateY(0deg);
    }

    50% {
        transform: rotateY(180deg);
    }

    100% {
        transform: rotateY(360deg);
    }
}

h2#loading-indicator {
    animation: loading-text 3s infinite;
}

main .object-selection-container {
    display: grid;
    gap: 1em;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

main .object-selection-container .object {
    border: 1px solid #a1a1a1;
    --object-padding: .6rem;
    --object-border-radius: .5rem;
    padding: var(--object-padding);
    border-radius: var(--object-border-radius);
    position: relative;
}

main .object-selection-container .object.selected {
    outline: 3px solid blue;
}

main .object-selection-container .object:not(.selected) {
    cursor: pointer;
}

main .object-selection-container .head-img {
    display: flex;
    justify-content: center;
    padding: 1em;
    margin-top: calc(-1 * var(--object-padding));
    margin-left: calc(-1 * var(--object-padding));
    margin-right: calc(-1 * var(--object-padding));
    margin-bottom: var(--object-padding);
    border-radius: var(--object-border-radius);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom: 1px solid #a1a1a1;
    background-image: url("assets/objects/grid.svg");
    background-size: 50%;
}

main .object-selection-container .head-img > img {
    height: 4em;
    width: auto;
    image-rendering: pixelated;
}

main .object-selection-container .title {
    position: absolute;
    top: 0;
    left: 0;
    padding: .5rem;
    font-weight: bold;
    background-color: white;
    border-top-left-radius: var(--object-border-radius);
    border-bottom-right-radius: var(--object-border-radius);
    font-family: var(--header-font);
    border-bottom: 1px solid #a1a1a1;
    border-right: 1px solid #a1a1a1;
}

main .scoreboard {
    border-radius: .8em;
    border: 1px solid #ccc;
    width: auto !important;
    max-width: 100%;
    max-height: 25em;
}

main .object-selection-container .description {
    font-family: var(--general-font);
}

#layout-choice-container {
    display: grid;
    gap: 1rem;
}

main .layout-choice {
    position: relative;
    padding: 1rem;
    border-radius: 1rem;
    border: 1px solid #ccc;
}

main .layout-choice canvas {
    width: 100%;
    height: 15em;
}

main .layout-choice button {
    width: fit-content;
    position: absolute;
    right: 0;
    bottom: 0;
    font-size: 1em;
    border: 1px solid #ccc;
    border-bottom: none;
    border-right: none;
    border-radius: 1rem;
    border-top-right-radius: 0;
    border-bottom-left-radius: 0;
    padding: 1rem;
}